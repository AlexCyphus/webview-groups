{"version":3,"sources":["components/ActionButton.js","components/Category.js","App.js","serviceWorker.js","index.js"],"names":["ActionButton","action","text","specId","fixed","color","classes","className","onClick","id","toUpperCase","Category","data","itemType","randomData","index","chatsFlags","src","image","title","description","screensEmojis","screensGroupSizes","map","i","NativeApp","name","console","log","tp","undefined","categoryData","srsLrn","jstChat","hbbyInts","tndPair","chatData","relaxedLearning","emojis","Array","from","length","_","flags","shuffleArray","array","j","Math","floor","random","slice","App","state","screen","popup","publicGroup","showsOver","value","handleScreenChange","bind","handleBackToPublic","togglePopup","toggleShowsOver","handleChange","this","setState","e","group","trackingPoint","isPublic","dontPopup","privacy","split","groupName","document","getElementById","xhr","XMLHttpRequest","url","open","send","Screen","arrayOfCategories","Object","keys","category","handleOpenGroup","item","replace","key","Popup","placeholder","type","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25068501.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ActionButton({action, text, specId, fixed=false, color}) {\n\n  if (fixed){var classes = \"seeMoreButton fixed-button-pos \"}\n  else {var classes = \"seeMoreButton \"}\n\n  if (color == \"pink\"){color = \"pink-background\"}\n  else if (color == \"blue\"){color = \"blue-background\"}\n\n  return ([\n    <a className=\"no-underline\" onClick={action}>\n      <div className={\"seeMoreContainer d-flex justify-content-center \"} id={specId}>\n        <div className={classes + color} >\n          <p className=\"m-0 no-underline px-2\">{text.toUpperCase()}</p>\n        </div>\n      </div>\n    </a>\n  ])\n}\n\nexport default ActionButton\n","import React from 'react';\n\nfunction Category({data, onClick, itemType, randomData, index, chatsFlags}) {\n  if (itemType == 'category'){\n    return (\n      <div className=\"row-item d-flex\" onClick={onClick}>\n        <div className=\"image-left d-flex\">\n          <img src={data.image} className=\"image m-auto\"/>\n        </div>\n        <div className=\"content-right m-auto\">\n          <p className=\"bold item-content-title\">{data.title}</p>\n          <p>{data.description}</p>\n        </div>\n      </div>\n    )\n  } \n\n  else if (itemType == \"chat\"){\n    return (\n      <div className=\"row-item d-flex\" onClick={onClick}>\n        <div className=\"image-left d-flex\">\n          <img src={\"/emojis/\"+randomData.screensEmojis[index]+\".svg\"} className=\"image m-auto\"/>\n        </div>\n        <div className=\"content-right\">\n          <p className=\"bold item-content-title min-70\">{data}</p>\n          <div className=\"bottom-row-info d-flex\">\n            <div className=\"col-auto p-0 pr-3 text-left\"><p className=\"person-count\">ðŸ‘¤ {randomData.screensGroupSizes[index]}</p></div>\n            <div className=\"col p-0 justify-content-end d-flex flag-holder\">\n              {chatsFlags.map((i) => {\n                return <img src={\"/emojis/\"+i+\".png\"} className=\"flag\"/>\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Category\n","import React, { Component } from 'react'\nimport ActionButton from \"./components/ActionButton\"\nimport Category from \"./components/Category\"\nimport './App.scss';\n\n\nconst NativeApp = {sendTrackingPoint: (name) => {console.log(name)}} //window.NativeApp\n\nfunction tp(name){\n  if (name == undefined){\n    return null\n  }\n  \n  const prefix = \"Exp_Grp_\"\n  name = prefix + name\n  NativeApp.sendTrackingPoint(name)\n}\n\nconst categoryData = {\n  srsLrn: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/31.svg\"\n  },\n  // relaxedLearning: {\n  //   title: \"Relaxed learning\",\n  //   description: \"Meet language learners interested in chatting while improving their language skills.\",\n  //   image: \"/emojis/32.svg\" \n  // },\n  jstChat: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/34.svg\" \n  },\n  hbbyInts: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/30.svg\" \n  },\n  tndPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/33.svg\" \n  }\n}\n\n\nconst chatData = {\n  srsLrn: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  jstChat: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hbbyInts: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n}\n\n// should randomize these here to prevent duplicates\nconst emojis = Array.from({length: 9}, (_, i) => i + 1)\nconst flags = Array.from({length: 11}, (_, i) => i + 14)\nconst groupSizes = [6, 11, 22, 105]\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n\n// random for each\nvar randomData = {\n  screensEmojis: shuffleArray(emojis).slice(0,4),\n  screensGroupSizes: shuffleArray(groupSizes)\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      screen: \"public\",\n      popup: false,\n      publicGroup: true,\n      showsOver: false,\n      value: ''\n    }\n    this.handleScreenChange = this.handleScreenChange.bind(this)\n    this.handleBackToPublic = this.handleBackToPublic.bind(this)\n    this.togglePopup = this.togglePopup.bind(this)\n    this.toggleShowsOver = this.toggleShowsOver.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen){\n    if (this.state.screen == screen){return}\n    this.setState({screen})\n  }\n\n  handleChange(e){\n    console.log('bang')\n  }\n\n  handleOpenGroup(group, trackingPoint){\n    tp(trackingPoint)\n    let screen = \"category_\" + group\n    if (group == \"tndPair\"){\n      return this.toggleShowsOver()\n    }\n    this.setState({screen})\n  }\n\n  handleBackToPublic(trackingPoint){\n    tp(trackingPoint)\n    this.setState({screen: \"public\"})\n  }\n\n  togglePopup(publicGroup, trackingPoint){\n    tp(trackingPoint)\n    \n    var isPublic = \"\"\n\n    if (publicGroup){isPublic = true}\n    else {isPublic = false}\n    \n    this.setState({\n      publicGroup: isPublic,\n      popup: !this.state.popup,\n      showsOver: false\n    })\n  }\n\n  toggleShowsOver(dontPopup=true, trackingPoint){\n    tp(trackingPoint)\n    tp(\"SryMsgSeen\")\n    if(dontPopup){this.togglePopup()}\n    this.setState({showsOver: true})\n    if(trackingPoint == \"CrtPblicChat_Clicked\" || trackingPoint == \"CrtPrvtChat_Clicked\"){\n      let privacy = trackingPoint.split(\"\")[7] === \"u\" ? \"Public\" : \"Private\"\n      let groupName = document.getElementById(\"groupName\").value\n      var xhr = new XMLHttpRequest()\n      var url = \"https://script.google.com/macros/s/AKfycbyqLtrrzDQWFSrrklsHJ-DxYChynLXTlnrg9tVtNJbZFJUhvDY/exec?groupName=\"+groupName+\"&privacy=\"+privacy\n      xhr.open('GET',url);\n      xhr.send();\n    }\n  }\n  \n  render() {\n    let Screen = () => null\n\n    var arrayOfCategories = shuffleArray(Object.keys(categoryData))\n\n    // if on the public screen\n    if (this.state.screen == \"public\"){\n      tp(\"PublicSeen\")\n      Screen = () => {return (\n        <>\n          <div className=\"row-holder\">\n            {arrayOfCategories.map(category => {\n              let tp = category+\"_Clckd\"\n              return <Category data={categoryData[category]} onClick={() => this.handleOpenGroup(category, tp)} itemType=\"category\"/>\n            })\n            }\n          </div>\n          <div className=\"see-more-holder\"><ActionButton text=\"See more\" color=\"blue\" action={() => this.toggleShowsOver(true, \"SeeMoreClicked\")}/></div>\n        </>\n      )}\n    }\n\n    // if on the private screen \n    else if (this.state.screen == \"private\"){\n      tp(\"PrivateSeen\")\n      Screen = () => {return (\n        <div className=\"text-center p-5\">\n          <p>Looks like you don't have any group chats yet...</p>\n          <img src=\"/emojis/4.svg\" className=\"py-3 private-chat-image\"/>\n          <div className=\"mt-3\">\n            <p className=\"pb-3\">Have some Tandem partners you want to invite to a group chat?</p>\n            <ActionButton text=\"Start a private group chat\" color=\"blue\" action={() => this.togglePopup(false, \"StrtPrivChat_Clickd\")}/>\n          </div>\n        </div>\n      )}\n    }\n\n    // if inside a group category\n    else if (this.state.screen.split(\"_\")[0] == \"category\"){\n      var category = this.state.screen.split(\"_\")[1]\n\n      var chatsFlags = []\n\n\n      Screen = () => {return (\n        <>\n        <div className=\"category-header d-flex\">\n          <div className=\"back-arrow d-flex\" onClick={() => this.handleBackToPublic(\"BckBtn_Clckd\")}>\n            <img src=\"/arrow.png\" className=\"arrow m-auto\"/>\n          </div>\n          <div className=\"category-title-holder\">\n            <p className=\"category-title\">{categoryData[category].title}</p>\n          </div>\n        </div>\n        <div className=\"row-holder\">\n          {chatData[category].map((item, i) => {\n            chatsFlags = shuffleArray(flags).slice(0, 4)\n            let trackingPoint = category+\"_\"+item.split(\" \")[0].replace(/[^a-zA-Z0-9]/, '')+\"_\"+randomData.screensGroupSizes[i]\n            return <Category data={item} key={i} itemType=\"chat\" randomData={randomData} index={i} chatsFlags={chatsFlags} onClick={() => this.toggleShowsOver(true, trackingPoint)}/>\n          })\n          }\n      </div>\n      <div className=\"create-public-group-holder text-center\">\n        <div className=\"m-auto\" id=\"button-holder\">\n          <p className=\"pb-2\">Want to chat about something else?</p>\n          <ActionButton text=\"Start public group chat\" color=\"blue\" action={() => this.togglePopup(true, \"StartPublicChat_Clcked\")}/>\n        </div>\n      </div>\n      </>\n      )}\n    }\n\n    let Popup = () => {\n      \n      if (this.state.showsOver) {\n        return (\n          <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n            <p className='text-center create-group-title'>Sorry...</p>\n            <p className='text-center py-3'>Tandem groups arenâ€™t quite ready yet. Weâ€™ll let you know when they are fully available.</p>\n            <ActionButton text=\"Back to groups\" color=\"blue\" specId=\"back-to-groups\" action={() => this.togglePopup(null, \"BckToGrps_Clckd\")}/>\n          </div> \n        )\n      }\n\n      return (\n        <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n          <p className='text-center create-group-title'>{this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"}</p>\n          <p className='text-center'>{this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"}</p>\n          <div className=\"input-holder\">\n            <input placeholder=\"Group name\" id=\"groupName\" className=\"mb-3\"></input>\n          </div>\n          <ActionButton type=\"submit\" text={this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\"} color=\"blue\" specId=\"create-group-chat\" action={() => this.toggleShowsOver(false, this.state.publicGroup ? \"CrtPblicChat_Clicked\" : \"CrtPrvtChat_Clicked\")}/>\n          <p className=\"text-center cancel\" onClick={() => this.togglePopup(null, \"Cancel\")}>Cancel</p>\n        </div> \n      )\n    }\n\n    return (\n      <div className=\"app h-100\">\n        <Popup/>\n        <div className={\"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\": \"d-none\")} onClick={this.togglePopup}></div>\n        {this.state.screen == \"public\" || this.state.screen == \"private\" \n        ? <div className=\"sliding-header d-flex\">\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"public\")}><p>Public</p></div>\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"private\")}><p>Private</p></div>\n        </div>\n        : null}\n        <Screen/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}