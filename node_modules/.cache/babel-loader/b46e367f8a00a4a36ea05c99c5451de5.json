{"ast":null,"code":"var _jsxFileName = \"/Users/alexcyphus/Desktop/code/experiments/groups/src/App.js\";\nimport React, { Component } from 'react';\nimport ActionButton from \"./components/ActionButton\";\nimport Category from \"./components/Category\";\nimport './App.scss';\nconst alreadyCalledTp = [];\nconst NativeApp = window.NativeApp;\n\nfunction tp(name) {\n  if (name == undefined) {\n    return null;\n  }\n\n  const prefix = \"Exp_Grp_\";\n  name = prefix + name;\n  NativeApp.sendTrackingPoint(name);\n\n  if (alreadyCalledTp.indexOf(name) === -1) {\n    return alreadyCalledTp.push(name);\n  }\n}\n\nconst categoryData = {\n  srsLrn: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/31.svg\"\n  },\n  // relaxedLearning: {\n  //   title: \"Relaxed learning\",\n  //   description: \"Meet language learners interested in chatting while improving their language skills.\",\n  //   image: \"/emojis/32.svg\" \n  // },\n  jstChat: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/34.svg\"\n  },\n  hbbyInts: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/30.svg\"\n  },\n  tndPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/33.svg\"\n  }\n};\nconst chatData = {\n  srsLrn: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  jstChat: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hbbyInts: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n}; // should randomize these here to prevent duplicates\n\nconst emojis = Array.from({\n  length: 9\n}, (_, i) => i + 1);\nconst flags = Array.from({\n  length: 11\n}, (_, i) => i + 14);\nconst groupSizes = [6, 11, 22, 105];\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n} // random for each\n\n\nvar randomData = {\n  screensEmojis: shuffleArray(emojis).slice(0, 4),\n  screensGroupSizes: shuffleArray(groupSizes)\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      screen: \"public\",\n      popup: false,\n      publicGroup: true,\n      showsOver: false,\n      value: ''\n    };\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.handleBackToPublic = this.handleBackToPublic.bind(this);\n    this.togglePopup = this.togglePopup.bind(this);\n    this.toggleShowsOver = this.toggleShowsOver.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen) {\n    if (this.state.screen == screen) {\n      return;\n    }\n\n    this.setState({\n      screen\n    });\n  }\n\n  handleChange(e) {\n    console.log('bang');\n  }\n\n  handleOpenGroup(group, trackingPoint) {\n    tp(trackingPoint);\n    let screen = \"category_\" + group;\n\n    if (group == \"tndPair\") {\n      return this.toggleShowsOver();\n    }\n\n    this.setState({\n      screen\n    });\n  }\n\n  handleBackToPublic(trackingPoint) {\n    tp(trackingPoint);\n    this.setState({\n      screen: \"public\"\n    });\n  }\n\n  togglePopup(publicGroup, trackingPoint) {\n    tp(trackingPoint);\n    var isPublic = \"\";\n\n    if (publicGroup) {\n      isPublic = true;\n    } else {\n      isPublic = false;\n    }\n\n    this.setState({\n      publicGroup: isPublic,\n      popup: !this.state.popup,\n      showsOver: false\n    });\n  }\n\n  toggleShowsOver(dontPopup = true, trackingPoint) {\n    tp(trackingPoint);\n    tp(\"SryMsgSeen\");\n\n    if (dontPopup) {\n      this.togglePopup();\n    }\n\n    this.setState({\n      showsOver: true\n    });\n\n    if (trackingPoint == \"CrtPblicChat_Clicked\" || trackingPoint == \"CrtPrvtChat_Clicked\") {\n      let privacy = trackingPoint.split(\"\")[7] === \"u\" ? \"Public\" : \"Private\";\n      let groupName = document.getElementById(\"groupName\").value;\n      var xhr = new XMLHttpRequest();\n      var url = \"https://script.google.com/macros/s/AKfycbyqLtrrzDQWFSrrklsHJ-DxYChynLXTlnrg9tVtNJbZFJUhvDY/exec?groupName=\" + groupName + \"&privacy=\" + privacy;\n      xhr.open('GET', url);\n      xhr.send();\n    }\n  }\n\n  render() {\n    let Screen = () => null;\n\n    var arrayOfCategories = shuffleArray(Object.keys(categoryData)); // if on the public screen\n\n    if (this.state.screen == \"public\") {\n      tp(\"PublicSeen\");\n\n      Screen = () => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row-holder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }\n        }, arrayOfCategories.map(category => {\n          let tp = category + \"_Clckd\";\n          return /*#__PURE__*/React.createElement(Category, {\n            data: categoryData[category],\n            onClick: () => this.handleOpenGroup(category, tp),\n            itemType: \"category\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 22\n            }\n          });\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"see-more-holder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ActionButton, {\n          text: \"See more\",\n          color: \"blue\",\n          action: () => this.toggleShowsOver(true, \"SeeMoreClicked\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 44\n          }\n        })));\n      };\n    } // if on the private screen \n    else if (this.state.screen == \"private\") {\n        tp(\"PrivateSeen\");\n\n        Screen = () => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"text-center p-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 11\n            }\n          }, \"Looks like you don't have any group chats yet...\"), /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/emojis/4.svg\",\n            className: \"py-3 private-chat-image\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"mt-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"pb-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }\n          }, \"Have some Tandem partners you want to invite to a group chat?\"), /*#__PURE__*/React.createElement(ActionButton, {\n            text: \"Start a private group chat\",\n            color: \"blue\",\n            action: () => this.togglePopup(false, \"StrtPrivChat_Clickd\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }\n          })));\n        };\n      } // if inside a group category\n      else if (this.state.screen.split(\"_\")[0] == \"category\") {\n          var category = this.state.screen.split(\"_\")[1];\n          var chatsFlags = [];\n\n          Screen = () => {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"category-header d-flex\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 9\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"back-arrow d-flex\",\n              onClick: () => this.handleBackToPublic(\"BckBtn_Clckd\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: \"/arrow.png\",\n              className: \"arrow m-auto\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 13\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"category-title-holder\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"category-title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 13\n              }\n            }, categoryData[category].title))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"row-holder\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 9\n              }\n            }, chatData[category].map((item, i) => {\n              chatsFlags = shuffleArray(flags).slice(0, 4);\n              let trackingPoint = category + \"_\" + item.split(\" \")[0].replace(/[^a-zA-Z0-9]/, '') + \"_\" + randomData.screensGroupSizes[i];\n              return /*#__PURE__*/React.createElement(Category, {\n                data: item,\n                key: i,\n                itemType: \"chat\",\n                randomData: randomData,\n                index: i,\n                chatsFlags: chatsFlags,\n                onClick: () => this.toggleShowsOver(true, trackingPoint),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 20\n                }\n              });\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"create-public-group-holder text-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 7\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"m-auto\",\n              id: \"button-holder\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 9\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"pb-2\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 11\n              }\n            }, \"Want to chat about something else?\"), /*#__PURE__*/React.createElement(ActionButton, {\n              text: \"Start public group chat\",\n              color: \"blue\",\n              action: () => this.togglePopup(true, \"StartPublicChat_Clcked\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 11\n              }\n            }))));\n          };\n        }\n\n    let Popup = () => {\n      if (this.state.showsOver) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"popup-main px-3 \" + (this.state.popup ? \"d-block\" : \"d-none\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center create-group-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }\n        }, \"Sorry...\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center py-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }\n        }, \"Tandem groups aren\\u2019t quite ready yet. We\\u2019ll let you know when they are fully available.\"), /*#__PURE__*/React.createElement(ActionButton, {\n          text: \"Back to groups\",\n          color: \"blue\",\n          specId: \"back-to-groups\",\n          action: () => this.togglePopup(null, \"BckToGrps_Clckd\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"popup-main px-3 \" + (this.state.popup ? \"d-block\" : \"d-none\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center create-group-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Group name\",\n        id: \"groupName\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(ActionButton, {\n        type: \"submit\",\n        text: this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\",\n        color: \"blue\",\n        specId: \"create-group-chat\",\n        action: () => this.toggleShowsOver(false, this.state.publicGroup ? \"CrtPblicChat_Clicked\" : \"CrtPrvtChat_Clicked\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center cancel\",\n        onClick: () => this.togglePopup(null, \"Cancel\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\" : \"d-none\"),\n      onClick: this.togglePopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }), this.state.screen == \"public\" || this.state.screen == \"private\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sliding-header d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null),\n      onClick: () => this.handleScreenChange(\"public\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 165\n      }\n    }, \"Public\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null),\n      onClick: () => this.handleScreenChange(\"private\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 167\n      }\n    }, \"Private\"))) : null, /*#__PURE__*/React.createElement(Screen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexcyphus/Desktop/code/experiments/groups/src/App.js"],"names":["React","Component","ActionButton","Category","alreadyCalledTp","NativeApp","window","tp","name","undefined","prefix","sendTrackingPoint","indexOf","push","categoryData","srsLrn","title","description","image","jstChat","hbbyInts","tndPair","chatData","relaxedLearning","emojis","Array","from","length","_","i","flags","groupSizes","shuffleArray","array","j","Math","floor","random","randomData","screensEmojis","slice","screensGroupSizes","App","constructor","state","screen","popup","publicGroup","showsOver","value","handleScreenChange","bind","handleBackToPublic","togglePopup","toggleShowsOver","handleChange","componentDidMount","setState","e","console","log","handleOpenGroup","group","trackingPoint","isPublic","dontPopup","privacy","split","groupName","document","getElementById","xhr","XMLHttpRequest","url","open","send","render","Screen","arrayOfCategories","Object","keys","map","category","chatsFlags","item","replace","Popup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ActionButton from \"./components/ActionButton\"\nimport Category from \"./components/Category\"\nimport './App.scss';\n\n\nconst alreadyCalledTp = []\n\nconst NativeApp = window.NativeApp\n\nfunction tp(name){\n  if (name == undefined){\n    return null\n  }\n  \n  const prefix = \"Exp_Grp_\"\n  name = prefix + name\n  NativeApp.sendTrackingPoint(name)\n  if (alreadyCalledTp.indexOf(name) === -1){\n    \n    return alreadyCalledTp.push(name)\n  }\n}\n\nconst categoryData = {\n  srsLrn: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/31.svg\"\n  },\n  // relaxedLearning: {\n  //   title: \"Relaxed learning\",\n  //   description: \"Meet language learners interested in chatting while improving their language skills.\",\n  //   image: \"/emojis/32.svg\" \n  // },\n  jstChat: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/34.svg\" \n  },\n  hbbyInts: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/30.svg\" \n  },\n  tndPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/33.svg\" \n  }\n}\n\n\nconst chatData = {\n  srsLrn: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  jstChat: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hbbyInts: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n}\n\n// should randomize these here to prevent duplicates\nconst emojis = Array.from({length: 9}, (_, i) => i + 1)\nconst flags = Array.from({length: 11}, (_, i) => i + 14)\nconst groupSizes = [6, 11, 22, 105]\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n\n// random for each\nvar randomData = {\n  screensEmojis: shuffleArray(emojis).slice(0,4),\n  screensGroupSizes: shuffleArray(groupSizes)\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      screen: \"public\",\n      popup: false,\n      publicGroup: true,\n      showsOver: false,\n      value: ''\n    }\n    this.handleScreenChange = this.handleScreenChange.bind(this)\n    this.handleBackToPublic = this.handleBackToPublic.bind(this)\n    this.togglePopup = this.togglePopup.bind(this)\n    this.toggleShowsOver = this.toggleShowsOver.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen){\n    if (this.state.screen == screen){return}\n    this.setState({screen})\n  }\n\n  handleChange(e){\n    console.log('bang')\n  }\n\n  handleOpenGroup(group, trackingPoint){\n    tp(trackingPoint)\n    let screen = \"category_\" + group\n    if (group == \"tndPair\"){\n      return this.toggleShowsOver()\n    }\n    this.setState({screen})\n  }\n\n  handleBackToPublic(trackingPoint){\n    tp(trackingPoint)\n    this.setState({screen: \"public\"})\n  }\n\n  togglePopup(publicGroup, trackingPoint){\n    tp(trackingPoint)\n    \n    var isPublic = \"\"\n\n    if (publicGroup){isPublic = true}\n    else {isPublic = false}\n    \n    this.setState({\n      publicGroup: isPublic,\n      popup: !this.state.popup,\n      showsOver: false\n    })\n  }\n\n  toggleShowsOver(dontPopup=true, trackingPoint){\n    tp(trackingPoint)\n    tp(\"SryMsgSeen\")\n    if(dontPopup){this.togglePopup()}\n    this.setState({showsOver: true})\n    if(trackingPoint == \"CrtPblicChat_Clicked\" || trackingPoint == \"CrtPrvtChat_Clicked\"){\n      let privacy = trackingPoint.split(\"\")[7] === \"u\" ? \"Public\" : \"Private\"\n      let groupName = document.getElementById(\"groupName\").value\n      var xhr = new XMLHttpRequest()\n      var url = \"https://script.google.com/macros/s/AKfycbyqLtrrzDQWFSrrklsHJ-DxYChynLXTlnrg9tVtNJbZFJUhvDY/exec?groupName=\"+groupName+\"&privacy=\"+privacy\n      xhr.open('GET',url);\n      xhr.send();\n    }\n  }\n  \n  render() {\n    let Screen = () => null\n\n    var arrayOfCategories = shuffleArray(Object.keys(categoryData))\n\n    // if on the public screen\n    if (this.state.screen == \"public\"){\n      tp(\"PublicSeen\")\n      Screen = () => {return (\n        <>\n          <div className=\"row-holder\">\n            {arrayOfCategories.map(category => {\n              let tp = category+\"_Clckd\"\n              return <Category data={categoryData[category]} onClick={() => this.handleOpenGroup(category, tp)} itemType=\"category\"/>\n            })\n            }\n          </div>\n          <div className=\"see-more-holder\"><ActionButton text=\"See more\" color=\"blue\" action={() => this.toggleShowsOver(true, \"SeeMoreClicked\")}/></div>\n        </>\n      )}\n    }\n\n    // if on the private screen \n    else if (this.state.screen == \"private\"){\n      tp(\"PrivateSeen\")\n      Screen = () => {return (\n        <div className=\"text-center p-5\">\n          <p>Looks like you don't have any group chats yet...</p>\n          <img src=\"/emojis/4.svg\" className=\"py-3 private-chat-image\"/>\n          <div className=\"mt-3\">\n            <p className=\"pb-3\">Have some Tandem partners you want to invite to a group chat?</p>\n            <ActionButton text=\"Start a private group chat\" color=\"blue\" action={() => this.togglePopup(false, \"StrtPrivChat_Clickd\")}/>\n          </div>\n        </div>\n      )}\n    }\n\n    // if inside a group category\n    else if (this.state.screen.split(\"_\")[0] == \"category\"){\n      var category = this.state.screen.split(\"_\")[1]\n\n      var chatsFlags = []\n\n\n      Screen = () => {return (\n        <>\n        <div className=\"category-header d-flex\">\n          <div className=\"back-arrow d-flex\" onClick={() => this.handleBackToPublic(\"BckBtn_Clckd\")}>\n            <img src=\"/arrow.png\" className=\"arrow m-auto\"/>\n          </div>\n          <div className=\"category-title-holder\">\n            <p className=\"category-title\">{categoryData[category].title}</p>\n          </div>\n        </div>\n        <div className=\"row-holder\">\n          {chatData[category].map((item, i) => {\n            chatsFlags = shuffleArray(flags).slice(0, 4)\n            let trackingPoint = category+\"_\"+item.split(\" \")[0].replace(/[^a-zA-Z0-9]/, '')+\"_\"+randomData.screensGroupSizes[i]\n            return <Category data={item} key={i} itemType=\"chat\" randomData={randomData} index={i} chatsFlags={chatsFlags} onClick={() => this.toggleShowsOver(true, trackingPoint)}/>\n          })\n          }\n      </div>\n      <div className=\"create-public-group-holder text-center\">\n        <div className=\"m-auto\" id=\"button-holder\">\n          <p className=\"pb-2\">Want to chat about something else?</p>\n          <ActionButton text=\"Start public group chat\" color=\"blue\" action={() => this.togglePopup(true, \"StartPublicChat_Clcked\")}/>\n        </div>\n      </div>\n      </>\n      )}\n    }\n\n    let Popup = () => {\n      \n      if (this.state.showsOver) {\n        return (\n          <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n            <p className='text-center create-group-title'>Sorry...</p>\n            <p className='text-center py-3'>Tandem groups aren’t quite ready yet. We’ll let you know when they are fully available.</p>\n            <ActionButton text=\"Back to groups\" color=\"blue\" specId=\"back-to-groups\" action={() => this.togglePopup(null, \"BckToGrps_Clckd\")}/>\n          </div> \n        )\n      }\n\n      return (\n        <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n          <p className='text-center create-group-title'>{this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"}</p>\n          <p className='text-center'>{this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"}</p>\n          <div className=\"input-holder\">\n            <input placeholder=\"Group name\" id=\"groupName\" className=\"mb-3\"></input>\n          </div>\n          <ActionButton type=\"submit\" text={this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\"} color=\"blue\" specId=\"create-group-chat\" action={() => this.toggleShowsOver(false, this.state.publicGroup ? \"CrtPblicChat_Clicked\" : \"CrtPrvtChat_Clicked\")}/>\n          <p className=\"text-center cancel\" onClick={() => this.togglePopup(null, \"Cancel\")}>Cancel</p>\n        </div> \n      )\n    }\n\n    return (\n      <div className=\"app h-100\">\n        <Popup/>\n        <div className={\"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\": \"d-none\")} onClick={this.togglePopup}></div>\n        {this.state.screen == \"public\" || this.state.screen == \"private\" \n        ? <div className=\"sliding-header d-flex\">\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"public\")}><p>Public</p></div>\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"private\")}><p>Private</p></div>\n        </div>\n        : null}\n        <Screen/>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}