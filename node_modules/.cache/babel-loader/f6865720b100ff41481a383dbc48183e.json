{"ast":null,"code":"var _jsxFileName = \"/Users/alexcyphus/Desktop/code/experiments/groups/src/App.js\";\nimport React, { Component } from 'react';\nimport ActionButton from \"./components/ActionButton\";\nimport Category from \"./components/Category\";\nimport './App.scss';\nconst categoryData = {\n  seriousLearning: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/12.png\"\n  },\n  relaxedLearning: {\n    title: \"Relaxed learning\",\n    description: \"Meet language learners interested in chatting while improving their language skills.\",\n    image: \"/emojis/6.png\"\n  },\n  justChatting: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/8.png\"\n  },\n  hobbiesAndInterests: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/3.png\"\n  },\n  tandemPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/5.png\"\n  }\n};\nconst chatData = {\n  seriousLearning: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  justChatting: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hobbiesAndInterests: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      screen: \"category_hobbiesAndInterests\",\n      popup: true,\n      publicGroup: true\n    };\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.handleBackToPublic = this.handleBackToPublic.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen) {\n    if (this.state.screen == screen) {\n      return;\n    }\n\n    this.setState({\n      screen\n    });\n  }\n\n  handleOpenGroup(group) {\n    let screen = \"category_\" + group;\n\n    if (group == \"tandemPair\") {\n      return this.handleEndIllusion();\n    }\n\n    this.setState({\n      screen\n    });\n  }\n\n  handleBackToPublic() {\n    this.setState({\n      screen: \"public\"\n    });\n  }\n\n  handleEndIllusion() {\n    alert(\"It's a prank, bro\");\n  }\n\n  render() {\n    let Screen = () => null; // if on the public screen\n\n\n    if (this.state.screen == \"public\") {\n      Screen = () => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row-holder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }, Object.keys(categoryData).map(category => {\n          return /*#__PURE__*/React.createElement(Category, {\n            data: categoryData[category],\n            onClick: () => this.handleOpenGroup(category),\n            itemType: \"category\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 22\n            }\n          });\n        })), /*#__PURE__*/React.createElement(ActionButton, {\n          text: \"See more\",\n          color: \"blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }\n        }));\n      };\n    } // if on the private screen \n    else if (this.state.screen == \"private\") {\n        Screen = () => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }\n          }, \"Looks like you don't have any group chats yet...\"), /*#__PURE__*/React.createElement(ActionButton, {\n            text: \"Start a private group chat\",\n            color: \"blue\",\n            fixed: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }\n          }));\n        };\n      } // if inside a group category\n      else if (this.state.screen.split(\"_\")[0] == \"category\") {\n          var category = this.state.screen.split(\"_\")[1]; // should randomize these here to prevent duplicates\n\n          const emojis = Array.from({\n            length: 13\n          }, (_, i) => i + 1);\n          const flags = Array.from({\n            length: 11\n          }, (_, i) => i + 14);\n          const groupSizes = [6, 11, 22, 105];\n\n          function shuffleArray(array) {\n            for (let i = array.length - 1; i > 0; i--) {\n              const j = Math.floor(Math.random() * (i + 1));\n              [array[i], array[j]] = [array[j], array[i]];\n            }\n\n            return array;\n          } // random for each \n\n\n          var chatsFlags = [];\n          var randomData = {\n            screensEmojis: shuffleArray(emojis).slice(0, 4),\n            screensGroupSizes: shuffleArray(groupSizes)\n          };\n\n          Screen = () => {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"category-header d-flex\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 9\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"back-arrow col-1\",\n              onClick: this.handleBackToPublic,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 11\n              }\n            }, \"BACK\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"back-arrow col-10 text-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"category-title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 13\n              }\n            }, categoryData[category].title))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"row-holder\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 9\n              }\n            }, chatData[category].map((item, i) => {\n              chatsFlags = shuffleArray(flags).slice(0, 4);\n              return /*#__PURE__*/React.createElement(Category, {\n                data: item,\n                key: i,\n                itemType: \"chat\",\n                randomData: randomData,\n                index: i,\n                chatsFlags: chatsFlags,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 18\n                }\n              });\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"fixed-button-pos text-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 7\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 9\n              }\n            }, \"Want to chat about something else?\"), /*#__PURE__*/React.createElement(ActionButton, {\n              text: \"Start new public group chat\",\n              color: \"blue\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 9\n              }\n            })));\n          };\n        }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"popup-main px-3 \" + (this.state.popup ? \"d-block\" : \"d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center create-group-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Group name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Group category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ActionButton, {\n      text: this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\",\n      color: \"blue\",\n      specId: \"create-group-chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\" : \"d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }), this.state.screen == \"public\" || this.state.screen == \"private\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sliding-header d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null),\n      onClick: () => this.handleScreenChange(\"public\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 165\n      }\n    }, \"Public\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null),\n      onClick: () => this.handleScreenChange(\"private\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 167\n      }\n    }, \"Private\"))) : null, /*#__PURE__*/React.createElement(Screen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexcyphus/Desktop/code/experiments/groups/src/App.js"],"names":["React","Component","ActionButton","Category","categoryData","seriousLearning","title","description","image","relaxedLearning","justChatting","hobbiesAndInterests","tandemPair","chatData","App","constructor","state","screen","popup","publicGroup","handleScreenChange","bind","handleBackToPublic","componentDidMount","setState","handleOpenGroup","group","handleEndIllusion","alert","render","Screen","Object","keys","map","category","split","emojis","Array","from","length","_","i","flags","groupSizes","shuffleArray","array","j","Math","floor","random","chatsFlags","randomData","screensEmojis","slice","screensGroupSizes","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ActionButton from \"./components/ActionButton\"\nimport Category from \"./components/Category\"\nimport './App.scss';\n\nconst categoryData = {\n  seriousLearning: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/12.png\"\n  },\n  relaxedLearning: {\n    title: \"Relaxed learning\",\n    description: \"Meet language learners interested in chatting while improving their language skills.\",\n    image: \"/emojis/6.png\" \n  },\n  justChatting: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/8.png\" \n  },\n  hobbiesAndInterests: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/3.png\" \n  },\n  tandemPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/5.png\" \n  }\n}\n\nconst chatData = {\n  seriousLearning: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  justChatting: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hobbiesAndInterests: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      screen: \"category_hobbiesAndInterests\",\n      popup: true,\n      publicGroup: true\n    }\n    this.handleScreenChange = this.handleScreenChange.bind(this)\n    this.handleBackToPublic = this.handleBackToPublic.bind(this)\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen){\n    if (this.state.screen == screen){return}\n    this.setState({screen})\n  }\n\n  handleOpenGroup(group){\n    let screen = \"category_\" + group\n    if (group == \"tandemPair\"){\n      return this.handleEndIllusion()\n    }\n    this.setState({screen})\n  }\n\n  handleBackToPublic(){\n    this.setState({screen: \"public\"})\n  }\n\n  handleEndIllusion(){\n    alert(\"It's a prank, bro\")\n  }\n  \n  render() {\n    let Screen = () => null\n\n    // if on the public screen\n    if (this.state.screen == \"public\"){\n      Screen = () => {return (\n        <>\n          <div className=\"row-holder\">\n            {Object.keys(categoryData).map(category => {\n              return <Category data={categoryData[category]} onClick={() => this.handleOpenGroup(category)} itemType=\"category\"/>\n            })\n            }\n          </div>\n          <ActionButton text=\"See more\" color=\"blue\"/>\n        </>\n      )}\n    }\n\n    // if on the private screen \n    else if (this.state.screen == \"private\"){\n      Screen = () => {return (\n        <div>\n          <p>Looks like you don't have any group chats yet...</p>\n          <ActionButton text=\"Start a private group chat\" color=\"blue\" fixed={true}/>\n        </div>\n      )}\n    }\n\n    // if inside a group category\n    else if (this.state.screen.split(\"_\")[0] == \"category\"){\n      var category = this.state.screen.split(\"_\")[1]\n      \n      // should randomize these here to prevent duplicates\n      const emojis = Array.from({length: 13}, (_, i) => i + 1)\n      const flags = Array.from({length: 11}, (_, i) => i + 14)\n      const groupSizes = [6, 11, 22, 105]\n\n      function shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array\n      }\n      \n      // random for each \n      var chatsFlags = []\n\n      var randomData = {\n        screensEmojis: shuffleArray(emojis).slice(0,4),\n        screensGroupSizes: shuffleArray(groupSizes)\n      }\n\n      Screen = () => {return (\n        <>\n        <div className=\"category-header d-flex\">\n          <div className=\"back-arrow col-1\" onClick={this.handleBackToPublic}>\n            BACK\n          </div>\n          <div className=\"back-arrow col-10 text-center\">\n            <p className=\"category-title\">{categoryData[category].title}</p>\n          </div>\n        </div>\n        <div className=\"row-holder\">\n        {chatData[category].map((item, i) => {\n          chatsFlags = shuffleArray(flags).slice(0, 4)\n          return <Category data={item} key={i} itemType=\"chat\" randomData={randomData} index={i} chatsFlags={chatsFlags}/>\n        })\n        }\n      </div>\n      <div className=\"fixed-button-pos text-center\">\n        <p>Want to chat about something else?</p>\n        <ActionButton text=\"Start new public group chat\" color=\"blue\"/>\n      </div>\n      </>\n      )}\n    }\n\n    return (\n      <div className=\"app h-100\">\n        <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n          <p className='text-center create-group-title'>{this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"}</p>\n          <p className='text-center'>{this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"}</p>\n          <div className=\"input-holder\">\n            <input placeholder=\"Group name\"></input>\n            <input placeholder=\"Group category\"></input>\n          </div>\n          \n          <ActionButton text={this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\"} color=\"blue\" specId=\"create-group-chat\"/>\n          <p>Cancel</p>\n        </div>\n        <div className={\"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\": \"d-none\")}></div>\n        {this.state.screen == \"public\" || this.state.screen == \"private\" \n        ? <div className=\"sliding-header d-flex\">\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"public\")}><p>Public</p></div>\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"private\")}><p>Private</p></div>\n        </div>\n        : null}\n        <Screen/>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}