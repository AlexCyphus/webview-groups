{"ast":null,"code":"var _jsxFileName = \"/Users/alexcyphus/Desktop/code/experiments/groups/src/App.js\";\nimport React, { Component } from 'react';\nimport ActionButton from \"./components/ActionButton\";\nimport Category from \"./components/Category\";\nimport './App.scss';\nNativeApp.sendTrackingPoint(name);\nconst categoryData = {\n  seriousLearning: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/31.svg\"\n  },\n  relaxedLearning: {\n    title: \"Relaxed learning\",\n    description: \"Meet language learners interested in chatting while improving their language skills.\",\n    image: \"/emojis/32.svg\"\n  },\n  justChatting: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/34.svg\"\n  },\n  hobbiesAndInterests: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/30.svg\"\n  },\n  tandemPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/33.svg\"\n  }\n};\nconst chatData = {\n  seriousLearning: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  justChatting: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hobbiesAndInterests: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n}; // should randomize these here to prevent duplicates\n\nconst emojis = Array.from({\n  length: 9\n}, (_, i) => i + 1);\nconst flags = Array.from({\n  length: 11\n}, (_, i) => i + 14);\nconst groupSizes = [6, 11, 22, 105];\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n} // random for each\n\n\nvar randomData = {\n  screensEmojis: shuffleArray(emojis).slice(0, 4),\n  screensGroupSizes: shuffleArray(groupSizes)\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      screen: \"private\",\n      popup: false,\n      publicGroup: true,\n      showsOver: false\n    };\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.handleBackToPublic = this.handleBackToPublic.bind(this);\n    this.togglePopup = this.togglePopup.bind(this);\n    this.toggleShowsOver = this.toggleShowsOver.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen) {\n    if (this.state.screen == screen) {\n      return;\n    }\n\n    this.setState({\n      screen\n    });\n  }\n\n  handleOpenGroup(group) {\n    let screen = \"category_\" + group;\n\n    if (group == \"tandemPair\") {\n      return this.toggleShowsOver();\n    }\n\n    this.setState({\n      screen\n    });\n  }\n\n  handleBackToPublic() {\n    this.setState({\n      screen: \"public\"\n    });\n  }\n\n  togglePopup(publicGroup) {\n    var isPublic = \"\";\n\n    if (publicGroup) {\n      isPublic = true;\n    } else {\n      isPublic = false;\n    }\n\n    this.setState({\n      publicGroup: isPublic,\n      popup: !this.state.popup,\n      showsOver: false\n    });\n  }\n\n  toggleShowsOver(dontPopup = true) {\n    if (dontPopup) {\n      this.togglePopup();\n    }\n\n    this.setState({\n      showsOver: true\n    });\n  }\n\n  render() {\n    let Screen = () => null; // if on the public screen\n\n\n    if (this.state.screen == \"public\") {\n      Screen = () => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row-holder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }\n        }, Object.keys(categoryData).map(category => {\n          return /*#__PURE__*/React.createElement(Category, {\n            data: categoryData[category],\n            onClick: () => this.handleOpenGroup(category),\n            itemType: \"category\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 22\n            }\n          });\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"see-more-holder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ActionButton, {\n          text: \"See more\",\n          color: \"blue\",\n          action: this.toggleShowsOver,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 44\n          }\n        })));\n      };\n    } // if on the private screen \n    else if (this.state.screen == \"private\") {\n        Screen = () => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"text-center p-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 11\n            }\n          }, \"Looks like you don't have any group chats yet...\"), /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/emojis/4.svg\",\n            className: \"py-3 private-chat-image\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"mt-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"pb-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }\n          }, \"Have some Tandem partners you want to invite to a group chat?\"), /*#__PURE__*/React.createElement(ActionButton, {\n            text: \"Start a private group chat\",\n            color: \"blue\",\n            action: () => this.togglePopup(false),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }\n          })));\n        };\n      } // if inside a group category\n      else if (this.state.screen.split(\"_\")[0] == \"category\") {\n          var category = this.state.screen.split(\"_\")[1];\n          var chatsFlags = [];\n\n          Screen = () => {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"category-header d-flex\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 9\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"back-arrow d-flex\",\n              onClick: this.handleBackToPublic,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: \"/arrow.png\",\n              className: \"arrow m-auto\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 13\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"category-title-holder\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"category-title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 13\n              }\n            }, categoryData[category].title))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"row-holder\",\n              onClick: this.toggleShowsOver,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 9\n              }\n            }, chatData[category].map((item, i) => {\n              chatsFlags = shuffleArray(flags).slice(0, 4);\n              return /*#__PURE__*/React.createElement(Category, {\n                data: item,\n                key: i,\n                itemType: \"chat\",\n                randomData: randomData,\n                index: i,\n                chatsFlags: chatsFlags,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 20\n                }\n              });\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"create-public-group-holder text-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 7\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"m-auto\",\n              id: \"button-holder\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 9\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"pb-2\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 11\n              }\n            }, \"Want to chat about something else?\"), /*#__PURE__*/React.createElement(ActionButton, {\n              text: \"Start public group chat\",\n              color: \"blue\",\n              action: () => this.togglePopup(true),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 11\n              }\n            }))));\n          };\n        }\n\n    let Popup = () => {\n      if (this.state.showsOver) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"popup-main px-3 \" + (this.state.popup ? \"d-block\" : \"d-none\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center create-group-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }\n        }, \"Sorry...\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center py-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }\n        }, \"Tandem groups aren\\u2019t quite ready yet. We\\u2019ll let you know when they are fully available.\"), /*#__PURE__*/React.createElement(ActionButton, {\n          text: \"Back to groups\",\n          color: \"blue\",\n          specId: \"back-to-groups\",\n          action: this.togglePopup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"popup-main px-3 \" + (this.state.popup ? \"d-block\" : \"d-none\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center create-group-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }, this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Group name\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(ActionButton, {\n        text: this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\",\n        color: \"blue\",\n        specId: \"create-group-chat\",\n        action: () => this.toggleShowsOver(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center mb-2\",\n        onClick: this.togglePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\" : \"d-none\"),\n      onClick: this.togglePopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), this.state.screen == \"public\" || this.state.screen == \"private\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sliding-header d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null),\n      onClick: () => this.handleScreenChange(\"public\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 165\n      }\n    }, \"Public\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null),\n      onClick: () => this.handleScreenChange(\"private\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 167\n      }\n    }, \"Private\"))) : null, /*#__PURE__*/React.createElement(Screen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexcyphus/Desktop/code/experiments/groups/src/App.js"],"names":["React","Component","ActionButton","Category","NativeApp","sendTrackingPoint","name","categoryData","seriousLearning","title","description","image","relaxedLearning","justChatting","hobbiesAndInterests","tandemPair","chatData","emojis","Array","from","length","_","i","flags","groupSizes","shuffleArray","array","j","Math","floor","random","randomData","screensEmojis","slice","screensGroupSizes","App","constructor","state","screen","popup","publicGroup","showsOver","handleScreenChange","bind","handleBackToPublic","togglePopup","toggleShowsOver","componentDidMount","setState","handleOpenGroup","group","isPublic","dontPopup","render","Screen","Object","keys","map","category","split","chatsFlags","item","Popup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ActionButton from \"./components/ActionButton\"\nimport Category from \"./components/Category\"\nimport './App.scss';\n\nNativeApp.sendTrackingPoint(name)\n\nconst categoryData = {\n  seriousLearning: {\n    title: \"Serious learning\",\n    description: \"Find other learners looking to rapidly improve their language skills\",\n    image: \"/emojis/31.svg\"\n  },\n  relaxedLearning: {\n    title: \"Relaxed learning\",\n    description: \"Meet language learners interested in chatting while improving their language skills.\",\n    image: \"/emojis/32.svg\" \n  },\n  justChatting: {\n    title: \"Just chatting\",\n    description: \"Meet and chat with Tandem members from all over the world.\",\n    image: \"/emojis/34.svg\" \n  },\n  hobbiesAndInterests: {\n    title: \"Hobbies and interests\",\n    description: \"Find out what people do for fun around the globe.\",\n    image: \"/emojis/30.svg\" \n  },\n  tandemPair: {\n    title: \"Tandem Pair\",\n    description: \"Join a group with another English speaker and two Spanish speakers.\",\n    image: \"/emojis/33.svg\" \n  }\n}\n\n\nconst chatData = {\n  seriousLearning: [\"Grammar tips\", \"Useful vocab + phrases\", \"Pronounciation help\", \"Learning resources\"],\n  relaxedLearning: [\"What are your favorite ways to learn?\", \"Learning tips\", \"Big group Tandem\", \"Book recommendations\"],\n  justChatting: [\"How's your day?\", \"Introduce yourself!\", \"What is the meaning of life?\", \"Gossip\"],\n  hobbiesAndInterests: [\"Sports\", \"TV Shows\", \"Music\", \"Exploring nature\"]\n}\n\n// should randomize these here to prevent duplicates\nconst emojis = Array.from({length: 9}, (_, i) => i + 1)\nconst flags = Array.from({length: 11}, (_, i) => i + 14)\nconst groupSizes = [6, 11, 22, 105]\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n\n// random for each\nvar randomData = {\n  screensEmojis: shuffleArray(emojis).slice(0,4),\n  screensGroupSizes: shuffleArray(groupSizes)\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      screen: \"private\",\n      popup: false,\n      publicGroup: true,\n      showsOver: false\n    }\n    this.handleScreenChange = this.handleScreenChange.bind(this)\n    this.handleBackToPublic = this.handleBackToPublic.bind(this)\n    this.togglePopup = this.togglePopup.bind(this)\n    this.toggleShowsOver = this.toggleShowsOver.bind(this)\n  }\n\n  componentDidMount() {}\n\n  handleScreenChange(screen){\n    if (this.state.screen == screen){return}\n    this.setState({screen})\n  }\n\n  handleOpenGroup(group){\n    let screen = \"category_\" + group\n    if (group == \"tandemPair\"){\n      return this.toggleShowsOver()\n    }\n    this.setState({screen})\n  }\n\n  handleBackToPublic(){\n    this.setState({screen: \"public\"})\n  }\n\n  togglePopup(publicGroup){\n    var isPublic = \"\"\n\n    if (publicGroup){isPublic = true}\n    else {isPublic = false}\n    \n    this.setState({\n      publicGroup: isPublic,\n      popup: !this.state.popup,\n      showsOver: false\n    })\n  }\n\n  toggleShowsOver(dontPopup=true){\n    if(dontPopup){this.togglePopup()}\n    this.setState({showsOver: true})\n  }\n  \n  render() {\n    let Screen = () => null\n\n    // if on the public screen\n    if (this.state.screen == \"public\"){\n      Screen = () => {return (\n        <>\n          <div className=\"row-holder\">\n            {Object.keys(categoryData).map(category => {\n              return <Category data={categoryData[category]} onClick={() => this.handleOpenGroup(category)} itemType=\"category\"/>\n            })\n            }\n          </div>\n          <div className=\"see-more-holder\"><ActionButton text=\"See more\" color=\"blue\" action={this.toggleShowsOver}/></div>\n        </>\n      )}\n    }\n\n    // if on the private screen \n    else if (this.state.screen == \"private\"){\n      Screen = () => {return (\n        <div className=\"text-center p-5\">\n          <p>Looks like you don't have any group chats yet...</p>\n          <img src=\"/emojis/4.svg\" className=\"py-3 private-chat-image\"/>\n          <div className=\"mt-3\">\n            <p className=\"pb-3\">Have some Tandem partners you want to invite to a group chat?</p>\n            <ActionButton text=\"Start a private group chat\" color=\"blue\" action={() => this.togglePopup(false)}/>\n          </div>\n        </div>\n      )}\n    }\n\n    // if inside a group category\n    else if (this.state.screen.split(\"_\")[0] == \"category\"){\n      var category = this.state.screen.split(\"_\")[1]\n\n      var chatsFlags = []\n\n\n      Screen = () => {return (\n        <>\n        <div className=\"category-header d-flex\">\n          <div className=\"back-arrow d-flex\" onClick={this.handleBackToPublic}>\n            <img src=\"/arrow.png\" className=\"arrow m-auto\"/>\n          </div>\n          <div className=\"category-title-holder\">\n            <p className=\"category-title\">{categoryData[category].title}</p>\n          </div>\n        </div>\n        <div className=\"row-holder\" onClick={this.toggleShowsOver}>\n          {chatData[category].map((item, i) => {\n            chatsFlags = shuffleArray(flags).slice(0, 4)\n            return <Category data={item} key={i} itemType=\"chat\" randomData={randomData} index={i} chatsFlags={chatsFlags}/>\n          })\n          }\n      </div>\n      <div className=\"create-public-group-holder text-center\">\n        <div className=\"m-auto\" id=\"button-holder\">\n          <p className=\"pb-2\">Want to chat about something else?</p>\n          <ActionButton text=\"Start public group chat\" color=\"blue\" action={() => this.togglePopup(true)}/>\n        </div>\n      </div>\n      </>\n      )}\n    }\n\n    let Popup = () => {\n      \n      if (this.state.showsOver) {\n        return (\n          <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n            <p className='text-center create-group-title'>Sorry...</p>\n            <p className='text-center py-3'>Tandem groups aren’t quite ready yet. We’ll let you know when they are fully available.</p>\n            <ActionButton text=\"Back to groups\" color=\"blue\" specId=\"back-to-groups\" action={this.togglePopup}/>\n          </div> \n        )\n      }\n\n      return (\n        <div className={\"popup-main px-3 \" + (this.state.popup ? \"d-block\": \"d-none\")}>\n          <p className='text-center create-group-title'>{this.state.publicGroup ? \"Create a public group\" : \"Create a private group\"}</p>\n          <p className='text-center'>{this.state.publicGroup ? \"Create a group chat that anyone on Tandem with your language pairing can join.\" : \"Create a private group chat and invite your Tandem partners to join.\"}</p>\n          <div className=\"input-holder\">\n            <input placeholder=\"Group name\" className=\"mb-3\"></input>\n          </div>\n          <ActionButton text={this.state.publicGroup ? \"Create Public Group Chat\" : \"Create Private Group Chat\"} color=\"blue\" specId=\"create-group-chat\" action={() => this.toggleShowsOver(false)}/>\n          <p className=\"text-center mb-2\" onClick={this.togglePopup}>Cancel</p>\n        </div> \n      )\n    }\n\n\n    return (\n      <div className=\"app h-100\">\n        <Popup/>\n        <div className={\"overlay w-100 h-100 \" + (this.state.popup ? \"d-flex\": \"d-none\")} onClick={this.togglePopup}></div>\n        {this.state.screen == \"public\" || this.state.screen == \"private\" \n        ? <div className=\"sliding-header d-flex\">\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"public\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"public\")}><p>Public</p></div>\n          <div className={\"tab-slider col-6 text-center bold \" + (this.state.screen == \"private\" ? 'blue' : null)} onClick={() => this.handleScreenChange(\"private\")}><p>Private</p></div>\n        </div>\n        : null}\n        <Screen/>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}